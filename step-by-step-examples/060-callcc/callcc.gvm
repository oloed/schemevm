**** #<primitive | callcc.o1|> =
#line 3 "/home/olpa/p/scheme/schemevs/step-by-step-examples/060-callcc/callcc.ss"
#1 0 entry-point 0 ()                       ; +0=#
  +1 = (##box '3)                           ; +0=# +1=.
  +2 = (##box '#f)                          ; +0=# +1=2#cnt +2=.
  -1 = +0                                   ; -1=# +1=2#cnt +2=1#in
  -2 = +1                                   ; -1=# -2=2#cnt +1=2#cnt +2=1#in
  -3 = +2                                   ; -1=# -2=2#cnt -3=1#in +1=2#cnt +2=1#in
  close -4 = (#12 +2 +1)                    ; -1=# -2=2#cnt -3=1#in -4=. +1=2#cnt +2=1#in
  +1 = -4                                   ; -1=# -2=2#cnt -3=1#in -4 +1=. +2=1#in
  +0 = #3                                   ; -1=# -2=2#cnt -3=1#in -4 +0=. +1=. +2=1#in
  jump* 4 #2                                ; -1=# -2=2#cnt -3=1#in -4 +0=. +1=. +2=1#in
#2 4                                        ; -1=# -2=2#cnt -3=1#in -4 +0=. +1=. +2=1#in
  jump$ 4 call/cc 1                         ; -1=# -2=2#cnt -3=1#in -4 +0=. +1=. +2=1#in
#3 4 return-point                           ; -1=# -2=2#cnt -3=1#in -4 +1=.
  +1 = (##unbox -2)                         ; -1=# -2 -3=1#in -4 +1=.
  if (##eq? > '#<primitive >>) jump 4 #4 else #11 ; -1=# -2 -3=1#in -4 +1=temp.12
#4 4                                        ; -1=# -2 -3=1#in -4 +1=temp.12
  if (##fixnum? +1) jump 4 #5 else #11      ; -1=# -2 -3=1#in -4 +1=temp.12
#5 4                                        ; -1=# -2 -3=1#in -4 +1=temp.12
  if (##fx> +1 '0) jump 4 #7 else #9        ; -1=# -2 -3=1#in -4
#6 4 return-point                           ; -1=# -2 -3=1#in -4 +1=.
  if (##not +1) jump 4 #9 else #7           ; -1=# -2 -3=1#in -4
#7 4                                        ; -1=# -2 -3=1#in -4
  +1 = '#f                                  ; -1=# -2 -3=1#in -4 +1=.
  +0 = -1                                   ; -1 -2 -3=1#in -4 +0=# +1=.
  +2 = (##unbox -3)                         ; -1 -2 -3 -4 +0=# +1=. +2=.
  jump* 4 #8                                ; -1 -2 -3 -4 +0=# +1=. +2=.
#8 4                                        ; -1 -2 -3 -4 +0=# +1=. +2=.
  jump$ 0 +2 1                              ; +0=# +1=. +2=.
#9 4                                        ; -1=# -2 -3 -4
  +1 = '#!void                              ; -1=# -2 -3 -4 +1=.
  jump* 4 #10                               ; -1=# -2 -3 -4 +1=.
#10 4                                       ; -1=# -2 -3 -4 +1=.
  jump 0 -1                                 ; +1=.
#11 4                                       ; -1=# -2 -3=1#in -4 +1=temp.12
  +2 = '0                                   ; -1=# -2 -3=1#in -4 +1=. +2=.
  +0 = #6                                   ; -1=# -2 -3=1#in -4 +0=. +1=. +2=.
  jump$ 4 > 2                               ; -1=# -2 -3=1#in -4 +0=. +1=. +2=.
#12 0 closure-entry-point 1 ()              ; +0=# +1=3#out +4=(1#in 2#cnt)
  -1 = #29                                  ; -1=. +0=# +1=3#out +4=(1#in 2#cnt)
  close -2 = (#15 +4(1) +4(2) +1)           ; -1=. -2=. +0=#
  +3 = #14                                  ; -1=. -2=. +0=# +3=.
  +2 = -2                                   ; -1=. -2=. +0=# +2=. +3=.
  +1 = -1                                   ; -1=. -2=. +0=# +1=. +2=. +3=.
  jump* 2 #13                               ; -1=. -2=. +0=# +1=. +2=. +3=.
#13 2                                       ; -1=. -2=. +0=# +1=. +2=. +3=.
  jump$ 0 dynamic-wind 3                    ; +0=# +1=. +2=. +3=.
#14 0 entry-point 0 ()                      ; +0=#
  -1 = +0                                   ; -1=#
  +1 = '"After"                             ; -1=# +1=.
  +0 = #25                                  ; -1=# +0=. +1=.
  -2 = .                                    ; -1=# -2 +0=. +1=.
  -3 = .                                    ; -1=# -2 -3 +0=. +1=.
  -4 = .                                    ; -1=# -2 -3 -4 +0=. +1=.
  jump* 4 #16                               ; -1=# -2 -3 -4 +0=. +1=.
#15 0 closure-entry-point 0 ()              ; +0=# +4=(1#in 2#cnt 3#out)
  -1 = +0                                   ; -1=# +4=(1#in 2#cnt 3#out)
  -2 = +4                                   ; -1=# -2=(1#in 2#cnt 3#out) +4=(1#in 2#cnt 3#out)
  +1 = '"Thunk"                             ; -1=# -2=(1#in 2#cnt 3#out) +1=. +4=(1#in 2#cnt 3#out)
  +0 = #17                                  ; -1=# -2=(1#in 2#cnt 3#out) +0=. +1=. +4=(1#in 2#cnt 3#out)
  -3 = .                                    ; -1=# -2=(1#in 2#cnt 3#out) -3 +0=. +1=. +4=(1#in 2#cnt 3#out)
  -4 = .                                    ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +0=. +1=. +4=(1#in 2#cnt 3#out)
  jump* 4 #16                               ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +0=. +1=. +4=(1#in 2#cnt 3#out)
#16 4                                       ; -1=# -2 -3 -4 +0=. +1=.
  jump$ 4 display 1                         ; -1=# -2 -3 -4 +0=. +1=.
#17 4 return-point                          ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=.
  +0 = #18                                  ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +0=.
  jump$ 4 newline 0                         ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +0=.
#18 4 return-point                          ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=.
  close -3 = (#27 -2(1) -2(3))              ; -1=# -2=(1#in 2#cnt 3#out) -3=.
  +1 = -3                                   ; -1=# -2=(1#in 2#cnt 3#out) -3 +1=.
  +0 = #19                                  ; -1=# -2=(1#in 2#cnt 3#out) -3 +0=. +1=.
  -4 = .                                    ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +0=. +1=.
  jump$ 4 call/cc 1                         ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +0=. +1=.
#19 4 return-point                          ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=.
  +0 = -2(2)                                ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +0=.
  +1 = (##unbox +0)                         ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=.
  if (##eq? - '#<primitive ->) jump 4 #20 else #22 ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=temp.9
#20 4                                       ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=temp.9
  if (##fixnum? +1) jump 4 #21 else #22     ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=temp.9
#21 4                                       ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=temp.9
  +2 = (##fx-? +1 '1)                       ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=temp.9 +2=.
  if (##not +2) jump 4 #22 else #24         ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=temp.9 +2=temp.11
#22 4                                       ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=temp.9
  +2 = '1                                   ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=. +2=.
  +0 = #23                                  ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +0=. +1=. +2=.
  jump$ 4 - 2                               ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +0=. +1=. +2=.
#23 4 return-point                          ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +1=.
  +2 = +1                                   ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +2=.
  jump 4 #24                                ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +2=.
#24 4                                       ; -1=# -2=(1#in 2#cnt 3#out) -3 -4 +2=.
  +0 = -2(2)                                ; -1=# -2 -3 -4 +0=. +2=.
  . = (##set-box! +0 +2)                    ; -1=# -2 -3 -4
  +1 = '"Finishing thunk"                   ; -1=# -2 -3 -4 +1=.
  +0 = #25                                  ; -1=# -2 -3 -4 +0=. +1=.
  jump$ 4 display 1                         ; -1=# -2 -3 -4 +0=. +1=.
#25 4 return-point                          ; -1=# -2 -3 -4 +1=.
  +0 = -1                                   ; -1 -2 -3 -4 +0=#
  jump* 4 #26                               ; -1 -2 -3 -4 +0=#
#26 4                                       ; -1 -2 -3 -4 +0=#
  jump$ 0 newline 0                         ; +0=#
#27 0 closure-entry-point 1 ()              ; +0=# +1=4#cc +4=(1#in 3#out)
  +3 = +4(1)                                ; +0=# +1=4#cc +3=. +4=(1#in 3#out)
  . = (##set-box! +3 +1)                    ; +0=# +4=(1#in 3#out)
  +1 = '#f                                  ; +0=# +1=. +4=(1#in 3#out)
  jump* 0 #28                               ; +0=# +1=. +4=(1#in 3#out)
#28 0                                       ; +0=# +1=. +4=(1#in 3#out)
  jump$ 0 +4(2) 1                           ; +0=# +1=. +4=(1#in 3#out)
#29 0 entry-point 0 ()                      ; +0=#
  -1 = +0                                   ; -1=#
  +1 = '"Before"                            ; -1=# +1=.
  +0 = #25                                  ; -1=# +0=. +1=.
  -2 = .                                    ; -1=# -2 +0=. +1=.
  -3 = .                                    ; -1=# -2 -3 +0=. +1=.
  -4 = .                                    ; -1=# -2 -3 -4 +0=. +1=.
  jump* 4 #16                               ; -1=# -2 -3 -4 +0=. +1=.

