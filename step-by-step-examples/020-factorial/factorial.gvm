**** #<primitive | factorial|> =
#line 2 "/home/olpa/p/scheme/schemevm/step-by-step-examples/020-factorial/factorial.ss"
#1 0 entry-point 0 ()                       ; +0=#
  fact = '#<procedure fact>                 ; +0=#
#line 5
  -1 = +0                                   ; -1=#
  +1 = '5                                   ; -1=# +1=.
  +0 = #3                                   ; -1=# +0=. +1=.
  -2 = .                                    ; -1=# -2 +0=. +1=.
  -3 = .                                    ; -1=# -2 -3 +0=. +1=.
  -4 = .                                    ; -1=# -2 -3 -4 +0=. +1=.
  jump* 4 #2                                ; -1=# -2 -3 -4 +0=. +1=.
#2 4                                        ; -1=# -2 -3 -4 +0=. +1=.
  jump 4 fact 1                             ; -1=# -2 -3 -4 +0=. +1=.
#3 4 return-point                           ; -1=# -2 -3 -4 +1=.
  +0 = #4                                   ; -1=# -2 -3 -4 +0=. +1=.
  jump 4 '#<primitive display> 1            ; -1=# -2 -3 -4 +0=. +1=.
#4 4 return-point                           ; -1=# -2 -3 -4 +1=.
  +0 = -1                                   ; -1 -2 -3 -4 +0=#
  jump* 4 #5                                ; -1 -2 -3 -4 +0=#
#5 4                                        ; -1 -2 -3 -4 +0=#
  jump 0 '#<primitive newline> 0            ; +0=#

**** #<procedure fact> =
#line 2 "/home/olpa/p/scheme/schemevm/step-by-step-examples/020-factorial/factorial.ss"
#1 0 entry-point 1 ()                       ; +0=# +1=x
#line 3
  -1 = +0                                   ; -1=# +1=x
  -2 = +1                                   ; -1=# -2=x +1=x
  +0 = #3                                   ; -1=# -2=x +0=. +1=.
  -3 = .                                    ; -1=# -2=x -3 +0=. +1=.
  -4 = .                                    ; -1=# -2=x -3 -4 +0=. +1=.
  -5 = .                                    ; -1=# -2=x -3 -4 -5 +0=. +1=.
  -6 = .                                    ; -1=# -2=x -3 -4 -5 -6 +0=. +1=.
  -7 = .                                    ; -1=# -2=x -3 -4 -5 -6 -7 +0=. +1=.
  -8 = .                                    ; -1=# -2=x -3 -4 -5 -6 -7 -8 +0=. +1=.
  jump* 8 #2                                ; -1=# -2=x -3 -4 -5 -6 -7 -8 +0=. +1=.
#2 8                                        ; -1=# -2=x -3 -4 -5 -6 -7 -8 +0=. +1=.
  jump 8 '#<primitive zero?> 1              ; -1=# -2=x -3 -4 -5 -6 -7 -8 +0=. +1=.
#3 8 return-point                           ; -1=# -2=x -3 -4 -5 -6 -7 -8 +1=.
  if (##not +1) jump 8 #6 else #4           ; -1=# -2=x -3 -4 -5 -6 -7 -8
#4 8                                        ; -1=# -2 -3 -4 -5 -6 -7 -8
  +1 = '1                                   ; -1=# -2 -3 -4 -5 -6 -7 -8 +1=.
  jump* 8 #5                                ; -1=# -2 -3 -4 -5 -6 -7 -8 +1=.
#5 8                                        ; -1=# -2 -3 -4 -5 -6 -7 -8 +1=.
  jump 0 -1                                 ; +1=.
#6 8                                        ; -1=# -2=x -3 -4 -5 -6 -7 -8
#line 4
  +1 = -2                                   ; -1=# -2=x -3 -4 -5 -6 -7 -8 +1=.
  +2 = '1                                   ; -1=# -2=x -3 -4 -5 -6 -7 -8 +1=. +2=.
  +0 = #7                                   ; -1=# -2=x -3 -4 -5 -6 -7 -8 +0=. +1=. +2=.
  jump 8 '#<primitive -> 2                  ; -1=# -2=x -3 -4 -5 -6 -7 -8 +0=. +1=. +2=.
#7 8 return-point                           ; -1=# -2=x -3 -4 -5 -6 -7 -8 +1=.
  +0 = #8                                   ; -1=# -2=x -3 -4 -5 -6 -7 -8 +0=. +1=.
  jump 8 fact 1                             ; -1=# -2=x -3 -4 -5 -6 -7 -8 +0=. +1=.
#8 8 return-point                           ; -1=# -2=x -3 -4 -5 -6 -7 -8 +1=.
  +2 = -2                                   ; -1=# -2 -3 -4 -5 -6 -7 -8 +1=. +2=.
  +0 = -1                                   ; -1 -2 -3 -4 -5 -6 -7 -8 +0=# +1=. +2=.
  jump* 8 #9                                ; -1 -2 -3 -4 -5 -6 -7 -8 +0=# +1=. +2=.
#9 8                                        ; -1 -2 -3 -4 -5 -6 -7 -8 +0=# +1=. +2=.
  jump 0 '#<primitive *> 2                  ; +0=# +1=. +2=.
