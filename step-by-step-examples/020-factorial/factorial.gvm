**** #<primitive | factorial.o1|> =
#line 1 "/home/olpa/p/scheme/schemevs/step-by-step-examples/020-factorial/factorial.ss"
#1 0 entry-point 0 ()                       ; +0=#
  ~#fact = '#<procedure ~#fact>             ; +0=#
#line 4
  -1 = +0                                   ; -1=#
  +1 = '5                                   ; -1=# +1=.
  +0 = #3                                   ; -1=# +0=. +1=.
  -2 = .                                    ; -1=# -2 +0=. +1=.
  -3 = .                                    ; -1=# -2 -3 +0=. +1=.
  -4 = .                                    ; -1=# -2 -3 -4 +0=. +1=.
  jump* 4 #2                                ; -1=# -2 -3 -4 +0=. +1=.
#2 4                                        ; -1=# -2 -3 -4 +0=. +1=.
  jump$ 4 ~#fact 1                          ; -1=# -2 -3 -4 +0=. +1=.
#3 4 return-point                           ; -1=# -2 -3 -4 +1=.
  +0 = #4                                   ; -1=# -2 -3 -4 +0=. +1=.
  jump$ 4 display 1                         ; -1=# -2 -3 -4 +0=. +1=.
#4 4 return-point                           ; -1=# -2 -3 -4 +1=.
  +0 = -1                                   ; -1 -2 -3 -4 +0=#
  jump* 4 #5                                ; -1 -2 -3 -4 +0=#
#5 4                                        ; -1 -2 -3 -4 +0=#
  jump$ 0 newline 0                         ; +0=#

**** #<procedure ~#fact> =
#line 1 "/home/olpa/p/scheme/schemevs/step-by-step-examples/020-factorial/factorial.ss"
#1 0 entry-point 1 ()                       ; +0=# +1=1#x
  if (##eq? zero? '#<primitive zero?>) jump 0 #2 else #35 ; +0=# +1=1#x
#2 0                                        ; +0=# +1=1#x
  if (##fixnum? +1) jump 0 #3 else #9       ; +0=# +1=1#x
#3 0                                        ; +0=# +1=1#x
  if (##fxzero? +1) jump 0 #6 else #11      ; +0=# +1=1#x
#4 4 return-point                           ; -1=# -2=1#x -3 -4 +1=.
  if (##not +1) jump 4 #8 else #5           ; -1=# -2=1#x -3 -4
#5 4                                        ; -1=# -2 -3 -4
  +0 = -1                                   ; -1 -2 -3 -4 +0=#
  jump 0 #6                                 ; +0=#
#6 0                                        ; +0=#
  +1 = '1                                   ; +0=# +1=.
  jump* 0 #7                                ; +0=# +1=.
#7 0                                        ; +0=# +1=.
  jump 0 +0                                 ; +1=.
#8 4                                        ; -1=# -2=1#x -3 -4
  +1 = -2                                   ; -1=# -2=1#x -3 -4 +1=1#x
  +0 = -1                                   ; -1 -2=1#x -3 -4 +0=# +1=1#x
  jump 0 #11                                ; +0=# +1=1#x
#9 0                                        ; +0=# +1=1#x
  if (##flonum? +1) jump 0 #10 else #35     ; +0=# +1=1#x
#10 0                                       ; +0=# +1=1#x
  if (##flzero? +1) jump 0 #6 else #11      ; +0=# +1=1#x
#11 0                                       ; +0=# +1=1#x
  -1 = +0                                   ; -1=# +1=1#x
  -2 = +1                                   ; -1=# -2=1#x +1=1#x
  if (##eq? - '#<primitive ->) jump 2 #12 else #34 ; -1=# -2=1#x +1=1#x
#12 2                                       ; -1=# -2=1#x +1=1#x
  if (##fixnum? +1) jump 2 #13 else #34     ; -1=# -2=1#x +1=1#x
#13 2                                       ; -1=# -2=1#x +1=1#x
  +1 = (##fx-? +1 '1)                       ; -1=# -2=1#x +1=.
  if (##not +1) jump 2 #14 else #17         ; -1=# -2=1#x +1=temp.3
#14 2                                       ; -1=# -2=1#x
  +1 = -2                                   ; -1=# -2=1#x +1=.
  +2 = '1                                   ; -1=# -2=1#x +1=. +2=.
  +0 = #16                                  ; -1=# -2=1#x +0=. +1=. +2=.
  -3 = .                                    ; -1=# -2=1#x -3 +0=. +1=. +2=.
  -4 = .                                    ; -1=# -2=1#x -3 -4 +0=. +1=. +2=.
  jump* 4 #15                               ; -1=# -2=1#x -3 -4 +0=. +1=. +2=.
#15 4                                       ; -1=# -2=1#x -3 -4 +0=. +1=. +2=.
  jump$ 4 - 2                               ; -1=# -2=1#x -3 -4 +0=. +1=. +2=.
#16 4 return-point                          ; -1=# -2=1#x -3 -4 +1=.
  jump 2 #17                                ; -1=# -2=1#x +1=.
#17 2                                       ; -1=# -2=1#x +1=.
  +0 = #19                                  ; -1=# -2=1#x +0=. +1=.
  -3 = .                                    ; -1=# -2=1#x -3 +0=. +1=.
  -4 = .                                    ; -1=# -2=1#x -3 -4 +0=. +1=.
  jump* 4 #18                               ; -1=# -2=1#x -3 -4 +0=. +1=.
#18 4                                       ; -1=# -2=1#x -3 -4 +0=. +1=.
  jump$ 4 ~#fact 1                          ; -1=# -2=1#x -3 -4 +0=. +1=.
#19 4 return-point                          ; -1=# -2=1#x -3 -4 +1=.
  if (##eq? * '#<primitive *>) jump 4 #20 else #31 ; -1=# -2=1#x -3 -4 +1=temp.4
#20 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  if (##fixnum? -2) jump 4 #21 else #29     ; -1=# -2=1#x -3 -4 +1=temp.4
#21 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  if (##fixnum? +1) jump 4 #22 else #29     ; -1=# -2=1#x -3 -4 +1=temp.4
#22 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  if (##eq? -2 '0) jump 4 #23 else #24      ; -1=# -2=1#x -3 -4 +1=temp.4
#23 4                                       ; -1=# -2 -3 -4
  +1 = '0                                   ; -1=# -2 -3 -4 +1=.
  jump* 4 #27                               ; -1=# -2 -3 -4 +1=.
#24 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  if (##eq? -2 '-1) jump 4 #28 else #25     ; -1=# -2=1#x -3 -4 +1=temp.4
#25 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  +2 = (##fx*? +1 -2)                       ; -1=# -2=1#x -3 -4 +1=temp.4 +2=.
  if (##not +2) jump 4 #31 else #26         ; -1=# -2=1#x -3 -4 +1=temp.4 +2=.
#26 4                                       ; -1=# -2 -3 -4 +2=temp.6
  +1 = +2                                   ; -1=# -2 -3 -4 +1=.
  jump* 4 #27                               ; -1=# -2 -3 -4 +1=.
#27 4                                       ; -1=# -2 -3 -4 +1=.
  jump 0 -1                                 ; +1=.
#28 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  +2 = (##fx-? +1)                          ; -1=# -2=1#x -3 -4 +1=temp.4 +2=.
  if (##not +2) jump 4 #31 else #26         ; -1=# -2=1#x -3 -4 +1=temp.4 +2=.
#29 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  if (##flonum? -2) jump 4 #30 else #31     ; -1=# -2=1#x -3 -4 +1=temp.4
#30 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  if (##flonum? +1) jump 4 #33 else #31     ; -1=# -2=1#x -3 -4 +1=temp.4
#31 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  +2 = -2                                   ; -1=# -2 -3 -4 +1=temp.4 +2=.
  +0 = -1                                   ; -1 -2 -3 -4 +0=# +1=. +2=.
  jump* 4 #32                               ; -1 -2 -3 -4 +0=# +1=. +2=.
#32 4                                       ; -1 -2 -3 -4 +0=# +1=. +2=.
  jump$ 0 * 2                               ; +0=# +1=. +2=.
#33 4                                       ; -1=# -2=1#x -3 -4 +1=temp.4
  +1 = (##fl* +1 -2)                        ; -1=# -2 -3 -4 +1=.
  jump* 4 #27                               ; -1=# -2 -3 -4 +1=.
#34 2                                       ; -1=# -2=1#x +1=1#x
  +2 = '1                                   ; -1=# -2=1#x +1=. +2=.
  +0 = #16                                  ; -1=# -2=1#x +0=. +1=. +2=.
  -3 = .                                    ; -1=# -2=1#x -3 +0=. +1=. +2=.
  -4 = .                                    ; -1=# -2=1#x -3 -4 +0=. +1=. +2=.
  jump* 4 #15                               ; -1=# -2=1#x -3 -4 +0=. +1=. +2=.
#35 0                                       ; +0=# +1=1#x
  -1 = +0                                   ; -1=# +1=1#x
  -2 = +1                                   ; -1=# -2=1#x +1=1#x
  +0 = #4                                   ; -1=# -2=1#x +0=. +1=.
  -3 = .                                    ; -1=# -2=1#x -3 +0=. +1=.
  -4 = .                                    ; -1=# -2=1#x -3 -4 +0=. +1=.
  jump* 4 #36                               ; -1=# -2=1#x -3 -4 +0=. +1=.
#36 4                                       ; -1=# -2=1#x -3 -4 +0=. +1=.
  jump$ 4 zero? 1                           ; -1=# -2=1#x -3 -4 +0=. +1=.

